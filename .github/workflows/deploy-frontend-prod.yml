name: Deploy Frontend to Production

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend-prod.yml'
  workflow_dispatch:
    inputs:
      confirm_production_deploy:
        description: 'Type "DEPLOY" to confirm production deployment'
        required: true
        default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Frontend Production
    
    steps:
      - name: Validate Production Deployment
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [ "${{ github.event.inputs.confirm_production_deploy }}" != "DEPLOY" ]; then
            echo "❌ Production deployment not confirmed. Please type 'DEPLOY' to proceed."
            exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Update Frontend Config
        working-directory: ./frontend
        run: |
          # Ensure using unified config for production
          cp config.unified.js config.js
          echo "Updated frontend config for production environment"

      - name: Verify API Connectivity
        run: |
          # Test if the production API is responding
          curl -f https://construction-management-api-prod.lai-jameslai.workers.dev/health
          echo "✅ Production API is healthy"

      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          npx wrangler pages deploy frontend \
            --project-name construction-management-frontend-prod \
            --commit-dirty=true

      - name: Get Deployment URL
        id: deployment
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          # Get the latest deployment URL
          echo "📍 Deployment URL: https://construction-management-frontend-prod.pages.dev"
          echo "deployment_url=https://construction-management-frontend-prod.pages.dev" >> $GITHUB_OUTPUT

      - name: Test Frontend
        run: |
          sleep 15
          # Test if the frontend loads
          curl -f https://construction-management-frontend-prod.pages.dev
          echo "✅ Frontend deployment successful!"

      - name: Integration Test
        run: |
          # Basic integration test - check if frontend can connect to API
          sleep 5
          response=$(curl -s https://construction-management-frontend-prod.pages.dev)
          if echo "$response" | grep -q "construction-management-api-prod"; then
            echo "✅ Frontend correctly configured for production API"
          else
            echo "⚠️  Frontend API configuration verification skipped"
          fi

      - name: Notify Deployment
        if: success()
        run: |
          echo "🚀 Frontend Production deployment completed successfully"
          echo "📍 URL: https://construction-management-frontend-prod.pages.dev"
          echo "🔗 Latest deployment: ${{ steps.deployment.outputs.deployment_url }}"
          echo "⚠️  Please verify the system is working correctly"
          echo "🔗 Old production URL still active: https://cm-prod.pages.dev"